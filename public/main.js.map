{"version":3,"sources":["./src/app/presupuestos/presupuestos/presupuestos.component.ts","./src/app/presupuestos/presupuestos/presupuestos.component.html","./src/app/proveedores/proveedores/proveedores.component.ts","./src/app/proveedores/proveedores/proveedores.component.html","./src/app/pipes/paginate.pipe.ts","./src/app/inicio/inicio.component.ts","./src/app/inicio/inicio.component.html","./src/environments/environment.ts","./src/app/servicios/proveedores.service.ts","./src/app/presupuestos/addpres/addpres.component.ts","./src/app/presupuestos/addpres/addpres.component.html","./src/app/presupuestos/editpres/editpres.component.ts","./src/app/presupuestos/editpres/editpres.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/autenticacion/inises/inises.component.ts","./src/app/autenticacion/inises/inises.component.html","./src/app/servicios/presupuestos.service.ts","./src/app/app.module.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/paginator/paginator-es.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/autenticacion/registro/registro.component.ts","./src/app/autenticacion/registro/registro.component.html","./src/app/proveedores/editpro/editpro.component.ts","./src/app/proveedores/editpro/editpro.component.html","./src/app/proveedores/addprovee/addprovee.component.ts","./src/app/proveedores/addprovee/addprovee.component.html","./src/app/servicios/autenticacion.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PresupuestosService } from '../../servicios/presupuestos.service';\nimport { presupuesto } from 'src/app/model/presupuesto';\nimport { DialogoConfirmacionComponent } from 'src/app/dialog/dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-presupuestos',\n  templateUrl: './presupuestos.component.html',\n  styleUrls: ['./presupuestos.component.css']\n})\nexport class PresupuestosComponent implements OnInit {\n\n  presupuestos: presupuesto[] = [];\n  page_size:number = 2;\n  page_number:number = 1;\n  pageSizeOptions = [2, 5, 10]\n\n  constructor(private presupuestoService: PresupuestosService, public dialogo: MatDialog) { }\n\n  ngOnInit(): void {\n    this.presupuestoService.getPresupuestos().subscribe((data) => {\n      this.presupuestos = [];\n      data.forEach((presupuesto) => {\n        this.presupuestos.push({\n          key: presupuesto.key,\n          ...presupuesto.payload.val() as presupuesto\n        });\n      }\n      )\n    })\n  }\n\n  eliminarPresupuesto(id):void{\n    this.dialogo\n      .open(DialogoConfirmacionComponent, {\n        data: \"¿Seguro que desea eliminar?\"\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.presupuestoService.deletePresupuesto(id);\n        }\n      });\n  }\n\n  handlePage(event:PageEvent){\n    this.page_size = event.pageSize;\n    this.page_number = event.pageIndex + 1;\n  }\n\n\n}\n","<h3>Listado de Presupuestos</h3>\n<a class=\"btn btn-primary float-md-right\" routerLink=\"/addpres\">Añadir\n    nuevo presupuesto</a>\n<br>\n<table class=\"table table-bordered table-striped tabla\" style=\"margin-top: \n40px;\">\n    <thead>\n        <tr class=\"filters\">\n            <th>Proveedor</th>\n            <th>Fecha</th>\n            <th>Concepto</th>\n            <th>Base</th>\n            <th>IVA</th>\n            <th>Total</th>\n            <th>Editar</th>\n            <th>Eliminar</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let presupuesto of this.presupuestos | paginate:page_size:page_number\">\n            <td>{{ presupuesto.proveedor }}</td>\n            <td>{{ presupuesto.fecha }}</td>\n            <td>{{ presupuesto.concepto }}</td>\n            <td>{{ presupuesto.base }}</td>\n            <td>{{ presupuesto.iva }}</td>\n            <td>{{ presupuesto.total }}</td>\n            <td>\n                <button type=\"button\" class=\"btn btn-success\"\n                    routerLink=\"/editpres/{{ presupuesto.key }}\">Editar</button>\n            </td>\n            <td> <button class=\"btn btn-danger\" (click)=\"eliminarPresupuesto(presupuesto.key)\">Eliminar</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<mat-paginator [length]=\"presupuestos.length\"\n               [pageSize]=\"page_size\"\n               [pageSizeOptions]=\"pageSizeOptions\"\n               (page)=\"handlePage($event)\">\n</mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { DialogoConfirmacionComponent } from 'src/app/dialog/dialog.component';\nimport { proveedor } from 'src/app/model/proveedor';\nimport { ProveedoresService } from 'src/app/servicios/proveedores.service';\n\n@Component({\n  selector: 'app-proveedores',\n  templateUrl: './proveedores.component.html',\n  styleUrls: ['./proveedores.component.css']\n})\nexport class ProveedoresComponent implements OnInit {\n\n  proveedores: proveedor[] = []; \n  page_size:number = 2;\n  page_number:number = 1;\n  pageSizeOptions = [2, 5, 10]\n  constructor(private proveedoresService: ProveedoresService, public dialogo: MatDialog) { }\n\n  ngOnInit(): void {\n    this.proveedoresService.getProveedores().subscribe((data)=>{\n      this.proveedores = [];\n      data.forEach((proveedor)=>{\n        this.proveedores.push({\n          key: proveedor.key,\n          ...proveedor.payload.val() as proveedor\n        })\n      })\n    });\n  }\n\n  eliminarProveedor(id):void{\n    this.dialogo\n      .open(DialogoConfirmacionComponent, {\n        data: \"¿Seguro que desea eliminar?\"\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.proveedoresService.deleteProveedor(id);\n        }\n      });\n  }\n  handlePage(event:PageEvent){\n    this.page_size = event.pageSize;\n    this.page_number = event.pageIndex + 1;\n  }\n}\n","<h1>Listado de Proveedores</h1>\n<a class=\"btn btn-primary float-md-right\" routerLink=\"/addprovee\">Añadir\n    nuevo proveedor</a>\n<br>\n<table class=\"table table-bordered table-striped tabla\" style=\"margin-top: 40px;\">\n    <thead>\n        <tr class=\"filters\">\n            <th>Nombre</th>\n            <th>Email</th>\n            <th>Telefono</th>\n            <th>CIF</th>\n            <th>Dirección</th>\n            <th>CP</th>\n            <th>Localidad</th>\n            <th>Provincia</th>\n            <th>Contacto</th>\n            <th>Editar</th>\n            <th>Borrar</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let proveedor of this.proveedores | paginate:page_size:page_number\">\n            <td>{{ proveedor.nombre }}</td>\n            <td><a href=\"mailto:{{ proveedor.email }}\">{{ proveedor.email }}</a></td>\n            <td>{{ proveedor.telefono }}</td>\n            <td>{{ proveedor.cif }}</td>\n            <td>{{ proveedor.direccion }}</td>\n            <td>{{ proveedor.cp }}</td>\n            <td>{{ proveedor.localidad }}</td>\n            <td>{{ proveedor.provincia }}</td>\n            <td>{{ proveedor.contacto }}</td>\n            <td>\n                <button type=\"button\" class=\"btn btn-success\" routerLink=\"/editpro/{{ proveedor.key }}\">Editar</button>\n            </td>\n            <td> <button class=\"btn btn-danger\" (click)=\"eliminarProveedor(proveedor.key)\">Eliminar</button>\n            </td>\n    </tbody>\n</table>\n<mat-paginator [length]=\"proveedores.length\" [pageSize]=\"page_size\" [pageSizeOptions]=\"pageSizeOptions\"\n    (page)=\"handlePage($event)\">\n</mat-paginator>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'paginate'\n})\nexport class PaginatePipe implements PipeTransform {\n\n  transform(array: any[], page_size: number, page_number: number ): any[] {\n    if(!array.length) return [];\n\n    if(page_size >= array.length){\n      return array;\n    }\n\n    page_size = page_size || 5;\n    page_number = page_number || 1;\n    --page_number;\n\n    return array.slice(page_number * page_size, (page_number+1)* page_size)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Bienvenido a nuestra aplicación Compras App</h2>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyB7k27SzwgXlu1Nuy_qP--NZecY7kif7rI\",\n    authDomain: \"apppractica-53821.firebaseapp.com\",\n    databaseURL: \"https://apppractica-53821.firebaseio.com\",\n    projectId: \"apppractica-53821\",\n    storageBucket: \"apppractica-53821.appspot.com\",\n    messagingSenderId: \"654194752947\",\n    appId: \"1:654194752947:web:db3c7dd11706326ff41fc6\",\n    measurementId: \"G-QCC8RLYTHM\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {  AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { proveedor } from '../model/proveedor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProveedoresService {\n\n  DBNAME:string = \"proveedores\";\n  private DB:AngularFireList<unknown>;\n\n  constructor(private http: AngularFireDatabase) { \n    this.DB = this.http.list(this.DBNAME);\n   }\n\n\n   public postProveedor(Proveedor: proveedor) {\n    return this.DB.push(Proveedor);\n  }\n\n  public getProveedores(){\n    return this.DB.snapshotChanges();\n  }\n\n  public getProveedor(id){\n    return this.http.object(this.DBNAME+ \"/\" +  id).snapshotChanges();\n  }\n\n  public putProveedor(id, Proveedor:proveedor){\n    return this.http.object(this.DBNAME+ \"/\" +  id).update(Proveedor);\n  }\n\n  public deleteProveedor(id){\n    return this.http.object(this.DBNAME+ \"/\" +  id).remove();\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { PresupuestosService } from 'src/app/servicios/presupuestos.service';\nimport { presupuesto } from 'src/app/model/presupuesto'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-addpres',\n  templateUrl: './addpres.component.html',\n  styleUrls: ['./addpres.component.css']\n})\nexport class AddpresComponent implements OnInit {\n\n  presupuestoForm: FormGroup;\n  presupuesto: presupuesto;\n  base: any;\n  tipo: any;\n  iva: any = 0;\n  total: any = 0;\n  constructor(private pf: FormBuilder, private presupuestosService: PresupuestosService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.presupuestoForm = this.pf.group({\n      proveedor: ['', Validators.required],\n      fecha: ['', Validators.required],\n      concepto: ['', [Validators.required, Validators.minLength(10)]],\n      base: ['', Validators.required],\n      tipo: ['', Validators.required],\n      iva: this.iva,\n      total: this.total\n    });\n    this.onChanges();\n  }\n  onChanges(): void {\n    this.presupuestoForm.valueChanges.subscribe((valor) => {\n      this.base = valor.base;\n      this.tipo = valor.tipo;\n      this.presupuestoForm.value.iva = this.base * this.tipo;\n      this.presupuestoForm.value.total = this.base + (this.base * this.tipo);\n    });\n  }\n\n  onSubmit() {\n    this.presupuesto = this.savePresupuesto();\n    this.presupuestosService.postPresupuesto(this.presupuesto);\n    \n    this.router.navigate(['/presupuestos']);\n\n    \n  }\n\n  savePresupuesto() {\n    const savePresupuesto = {\n      proveedor: this.presupuestoForm.get('proveedor').value,\n      fecha: this.presupuestoForm.get('fecha').value,\n      concepto: this.presupuestoForm.get('concepto').value,\n      base: this.presupuestoForm.get('base').value,\n      tipo: this.presupuestoForm.get('tipo').value,\n      iva: this.base * this.tipo,\n      total: this.base + (this.base * this.tipo)\n    };\n    return savePresupuesto;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset 2\">\n        <h2>Añadir nuevo presupuesto</h2> \n        <a class=\"btn btn-primary float-md-right\" routerLink=\"/presupuestos\">Regresar\n            al listado</a>\n        <br>\n        <form [formGroup]=\"presupuestoForm\" (ngOnSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"proveedor\">Proveedor&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.proveedor.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.proveedor.invalid &&\n                presupuestoForm.controls.proveedor.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"proveedor\" formControlName=\"proveedor\">\n                <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.proveedor.invalid &&\n                presupuestoForm.controls.proveedor.touched\">\n                    El campo Proveedor es obligatorio.\n                </p>\n                <div class=\"form-group\">\n                    <label for=\"fecha\">Fecha Presupuesto&nbsp;</label>\n                    <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.fecha.valid\"> </i>\n                    <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.fecha.invalid &&\n                presupuestoForm.controls.fecha.touched\"> </i>\n                    <input type=\"date\" class=\"form-control\" id=\"fecha\" formControlName=\"fecha\">\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.fecha.invalid &&\n                presupuestoForm.controls.fecha.touched\">\n                        El campo Fecha presupuesto es obligatorio.\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"concepto\">Concepto&nbsp;</label>\n                    <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.concepto.valid\"> </i>\n                    <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.concepto.invalid &&\n                presupuestoForm.controls.concepto.touched\"> </i>\n                    <input type=\"text\" class=\"form-control\" id=\"concepto\" formControlName=\"concepto\">\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.concepto.invalid &&\n                presupuestoForm.controls.concepto.touched\">\n                        El campo Concepto es obligatorio.\n                    </p>\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.concepto.invalid &&\n                    presupuestoForm.controls.concepto.touched\">\n                        El campo Concepto debe tener al menos 10 caracteres.\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"base\">Base Imponible&nbsp;</label>\n                    <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.base.valid\"> </i>\n                    <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.base.invalid &&\n                presupuestoForm.controls.base.touched\"> </i>\n                    <input type=\"number\" class=\"form-control\" id=\"base\" formControlName=\"base\">\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.base.invalid &&\n                presupuestoForm.controls.base.touched\">\n                        El campo Base imponible es obligatorio.\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"tipo\">Tipo de IVA&nbsp;</label>\n                    <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.tipo.valid\"> </i>\n                    <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.tipo.invalid &&\n                presupuestoForm.controls.tipo.touched\"> </i>\n                    <select class=\"form-control\" id=\"tipo\" formControlName=\"tipo\">\n                        <option value=\"\">Seleccione...</option>\n                        <option value=0> 0 %</option>\n                        <option value=0.04> 4 %</option>\n                        <option value=0.10>10 %</option>\n                        <option value=0.21>21 %</option>\n                    </select>\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.tipo.invalid &&\n                presupuestoForm.controls.tipo.touched\">\n                        El campo Base IVA es obligatorio.\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"iva\">Importe IVA</label>\n                    <input type=\"number\" class=\"form-control\" id=\"iva\" formControlName=\"iva\"\n                        [(ngModel)]=\"presupuestoForm.value.iva\" disabled>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"total\">Total Factura IVA Incluido</label>\n                    <input type=\"number\" class=\"form-control\" id=\"total\" formControlName=\"total\"\n                        [(ngModel)]=\"presupuestoForm.value.total\" disabled>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"presupuestoForm.valid\"\n                    (click)=\"this.onSubmit()\">Añadir presupuesto</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!presupuestoForm.valid\"\n                    disabled>Añadir presupuesto</button> \n                    <a class=\"btn btn-danger cancelar\" routerLink=\"/presupuestos\">Cancelar</a>\n                <p class=\"alert alert-danger\" *ngIf=\"!presupuestoForm.valid\">\n                    Por favor complete todos los campos\n                </p>\n            </div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PresupuestosService } from '../../servicios/presupuestos.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { presupuesto } from 'src/app/model/presupuesto';\n\n@Component({\n  selector: 'app-editpres',\n  templateUrl: './editpres.component.html',\n  styleUrls: ['./editpres.component.css']\n})\nexport class EditpresComponent implements OnInit {\n\n\n  presupuestoForm: FormGroup;\n  presupuesto: presupuesto = {\n    proveedor: '',\n    base: 0,\n    concepto: '',\n    fecha: new Date,\n    iva: 0,\n    tipo: 0,\n    total: 0,\n  };\n\n  base: any;\n  tipo: any;\n  iva: any = 0;\n  total: any = 0;\n\n  id: string;\n\n  constructor(private pf: FormBuilder,\n    private presupuestoService: PresupuestosService,\n    private router: Router,\n    private activatedRouter: ActivatedRoute) {\n\n    this.activatedRouter.params.subscribe(parametros => {\n      this.id = parametros['id'];\n      this.presupuestoService.getPresupuesto(this.id).subscribe((data) => {\n        this.presupuesto = {\n          key: data.key,\n          ...data.payload.val() as presupuesto\n        };\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    this.presupuestoForm = this.pf.group({\n      proveedor: ['', Validators.required],\n      fecha: ['', Validators.required],\n      concepto: ['', [Validators.required, Validators.minLength(10)]],\n      base: ['', Validators.required],\n      tipo: ['', Validators.required],\n      iva: this.iva,\n      total: this.total\n    });\n    this.onChanges();\n  }\n\n  onChanges(): void {\n    this.presupuestoForm.valueChanges.subscribe((valor) => {\n      this.base = valor.base;\n      this.tipo = valor.tipo;\n      this.presupuestoForm.value.iva = this.base * this.tipo;\n      this.presupuestoForm.value.total = this.base + (this.base * this.tipo);\n    });\n  }\n\n  savePresupuesto():presupuesto {\n    const savePresupuesto = {\n      proveedor: this.presupuestoForm.get('proveedor').value,\n      fecha: this.presupuestoForm.get('fecha').value,\n      concepto: this.presupuestoForm.get('concepto').value,\n      base: this.presupuestoForm.get('base').value,\n      tipo: this.presupuestoForm.get('tipo').value,\n      iva: this.base * this.tipo,\n      total: this.base + (this.base * this.tipo)\n    };\n    return savePresupuesto;\n  }\n\n  onSubmit() {    \n    this.presupuesto = this.savePresupuesto(); \n    this.presupuestoService.putPresupuesto( this.id, this.presupuesto).then(()=>{\n      this.router.navigate(['/presupuestos']);\n    })\n\n  }\n\n\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset 2\">\n        <h2>Editar presupuesto</h2>\n        <a class=\"btn btn-primary float-md-right\" routerLink=\"/presupuestos\">Regresar\n            al listado</a>\n        <br>\n        <form [formGroup]=\"presupuestoForm\" (ngOnSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"proveedor\">Proveedor&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.proveedor.valid &&\n                presupuestoForm.controls.proveedor.dirty\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.proveedor.invalid &&\n                presupuestoForm.controls.proveedor.dirty\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"proveedor\" formControlName=\"proveedor\"\n                    [(ngModel)]=\"presupuesto.proveedor\">\n                <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.proveedor.invalid &&\n                presupuestoForm.controls.proveedor.dirty\">\n                    El campo Proveedor es obligatorio.\n                </p>\n                <div class=\"form-group\">\n                    <label for=\"fecha\">Fecha Presupuesto&nbsp;</label>\n                    <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.fecha.valid &&\n                    presupuestoForm.controls.fecha.dirty\"> </i>\n                    <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.fecha.invalid &&\n                presupuestoForm.controls.fecha.dirty\"> </i>\n                    <input type=\"date\" class=\"form-control\" id=\"fecha\" formControlName=\"fecha\"\n                        [(ngModel)]=\"presupuesto.fecha\">\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.fecha.invalid &&\n                presupuestoForm.controls.fecha.dirty\">\n                        El campo Fecha presupuesto es obligatorio.\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"concepto\">Concepto&nbsp;</label>\n                    <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.concepto.valid &&\n                    presupuestoForm.controls.concepto.dirty\"> </i>\n                    <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.concepto.invalid &&\n                presupuestoForm.controls.concepto.dirty\"> </i>\n                    <input type=\"text\" class=\"form-control\" id=\"concepto\" formControlName=\"concepto\"\n                        [(ngModel)]=\"presupuesto.concepto\">\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.concepto.invalid &&\n                presupuestoForm.controls.concepto.dirty\">\n                        El campo Concepto es obligatorio.\n                    </p>\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.concepto.invalid &&\n                    presupuestoForm.controls.concepto.dirty\">\n                        El campo Concepto debe tener al menos 10 caracteres.\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"base\">Base Imponible&nbsp;</label>\n                    <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.base.valid &&\n                    presupuestoForm.controls.base.dirty\"> </i>\n                    <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.base.invalid &&\n                presupuestoForm.controls.base.dirty\"> </i>\n                    <input type=\"number\" class=\"form-control\" id=\"base\" formControlName=\"base\"\n                        [(ngModel)]=\"presupuesto.base\">\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.base.invalid &&\n                presupuestoForm.controls.base.dirty\">\n                        El campo Base imponible es obligatorio.\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"tipo\">Tipo de IVA&nbsp;</label>\n                    <i class=\"fa fa-check-circle check\" *ngIf=\"presupuestoForm.controls.tipo.valid &&\n                    presupuestoForm.controls.tipo.dirty\"> </i>\n                    <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"presupuestoForm.controls.tipo.invalid &&\n                presupuestoForm.controls.tipo.dirty\"> </i>\n                    <select class=\"form-control\" id=\"tipo\" formControlName=\"tipo\" [(ngModel)]=\"presupuesto.tipo\">\n                        <option value=\"\">Seleccione...</option>\n                        <option value=0> 0 %</option>\n                        <option value=0.04> 4 %</option>\n                        <option value=0.10>10 %</option>\n                        <option value=0.21>21 %</option>\n                    </select>\n                    <p class=\"alert alert-danger\" *ngIf=\"presupuestoForm.controls.tipo.invalid &&\n                presupuestoForm.controls.tipo.dirty\">\n                        El campo Base IVA es obligatorio.\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"iva\">Importe IVA</label>\n                    <input type=\"number\" class=\"form-control\" id=\"iva\" formControlName=\"iva\"\n                        [(ngModel)]=\"presupuestoForm.value.iva\" disabled>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"total\">Total Factura IVA Incluido</label>\n                    <input type=\"number\" class=\"form-control\" id=\"total\" formControlName=\"total\"\n                        [(ngModel)]=\"presupuestoForm.value.total\" disabled>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"presupuestoForm.valid\"\n                    (click)=\"this.onSubmit()\">Guardar cambios</button><button type=\"submit\" class=\"btn btn-primary\"\n                    *ngIf=\"!presupuestoForm.valid\" disabled>Guardar cambios</button>\n                <a class=\"btn btn-danger cancelar\" routerLink=\"/presupuestos\">Cancelar</a>\n                <p class=\"alert alert-danger\" *ngIf=\"!presupuestoForm.valid\">\n                    Por favor complete todos los campos\n                </p>\n            </div>\n        </form>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AppPractica';\n\n}\n","<app-header></app-header>\n<div class=\"container\">\n <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AutenticacionService } from 'src/app/servicios/autenticacion.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-inises',\n  templateUrl: './inises.component.html',\n  styleUrls: ['./inises.component.css']\n})\nexport class InisesComponent implements OnInit {\n\n\n  loginForm: FormGroup;\n  userdata: any;\n  mensaje = false;\n  mensajeGoogle = false;\n\n\n  constructor(private formBuilder: FormBuilder,\n    private autService: AutenticacionService,\n    private router: Router,\n    private activatedRouter: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      'email': ['', [Validators.required, Validators.email]],\n      'password': ['', [Validators.required, Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'), Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    this.userdata = this.saveUserdata();\n    this.autService.inicioSesion(this.userdata).then(response => {\n      this.router.navigate(['/inicio']);\n    }).catch(\n        error => {\n          if (this.isAuth() === false) {\n            this.mensaje = true\n          }\n        }\n      );\n  }\n\n  saveUserdata() {\n\n    const saveUserdata = {\n      email: this.loginForm.get('email').value,\n      password: this.loginForm.get('password').value,\n    };\n    return saveUserdata;\n  }\n\n  isAuth() {\n    return this.autService.isAuthenticated();\n  }\n\n  GoogleAuth() {\n    this.autService.GoogleAuth().then((user) => {\n      if (user) {\n        this.router.navigateByUrl('/inicio');\n      } else {\n        this.mensajeGoogle = true;\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <h4>Introduzca los siguientes datos:</h4>\n            <label>Correo Electrónico</label>\n            <input type=\"email\" id=\"inputEmail\" class=\"form-control\" formControlName=\"email\" required autofocus>\n            <label>Contraseña</label>\n            <input type=\"password\" id=\"inputPassword\" class=\"form-control\" formControlName=\"password\" required>\n            <hr>\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Inicie sesión</button>\n        </form>\n        <p class=\"alert alert-danger\" *ngIf=\"mensaje\">\n            El usuario o contraseña no es correcto\n        </p>\n    </div>\n</div>\n<br/>\n<div class=\"row col-md-6 offset-md-3\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"GoogleAuth()\">\n        Log in with Google\n    </button>\n    <p class=\"alert alert-danger\" *ngIf=\"mensajeGoogle\">\n        El usuario o contraseña no es correcto\n    </p>\n</div>","import { Injectable } from '@angular/core';\nimport {  AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { presupuesto } from '../model/presupuesto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresupuestosService {\n\n  DBNAME:string = \"presupuestos\";\n  private DB:AngularFireList<unknown>;\n\n  constructor(private http: AngularFireDatabase) { \n    this.DB = this.http.list(this.DBNAME);\n   }\n\n\n  public postPresupuesto(presupuesto: presupuesto) {\n    return this.DB.push(presupuesto);\n  }\n\n  public getPresupuestos(){\n    return this.DB.snapshotChanges();\n  }\n\n  public getPresupuesto(id){\n    return this.http.object(this.DBNAME+ \"/\" +  id).snapshotChanges();\n  }\n\n  public putPresupuesto(id, presupuesto:presupuesto){\n    return this.http.object(this.DBNAME+ \"/\" +  id).update(presupuesto);\n  }\n\n  public deletePresupuesto(id){\n    return this.http.object(this.DBNAME+ \"/\" +  id).remove();\n  }\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ProveedoresService } from 'src/app/servicios/proveedores.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProveedoresComponent } from './proveedores/proveedores/proveedores.component';\nimport { InicioComponent } from './inicio/inicio.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AddproveeComponent } from './proveedores/addprovee/addprovee.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AddpresComponent } from './presupuestos/addpres/addpres.component';\nimport { PresupuestosService } from './servicios/presupuestos.service';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from 'src/environments/environment';\nimport { PresupuestosComponent } from './presupuestos/presupuestos/presupuestos.component';\nimport { EditpresComponent } from './presupuestos/editpres/editpres.component';\nimport { DialogoConfirmacionComponent } from './dialog/dialog.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { EditproComponent } from './proveedores/editpro/editpro.component';\nimport { RegistroComponent } from './autenticacion/registro/registro.component';\nimport { AutenticacionService } from './servicios/autenticacion.service';\nimport { InisesComponent } from './autenticacion/inises/inises.component';\nimport { PaginatePipe } from './pipes/paginate.pipe';\nimport {MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\nimport { CustomMatPaginatorIntl } from 'src/app/paginator/paginator-es'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProveedoresComponent,\n    InicioComponent,\n    HeaderComponent,\n    AddproveeComponent,\n    AddpresComponent,\n    PresupuestosComponent,\n    EditpresComponent,\n    DialogoConfirmacionComponent,\n    EditproComponent,\n    RegistroComponent,\n    InisesComponent,\n    PaginatePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFireDatabaseModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    MatDialogModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatPaginatorModule\n\n  ],\n  providers: [ProveedoresService, \n    PresupuestosService, \n    AutenticacionService,\n    {\n      provide: MatPaginatorIntl,\n      useClass: CustomMatPaginatorIntl\n    }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    DialogoConfirmacionComponent\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogoConfirmacionComponent implements OnInit {\n\nconstructor(\n    public dialogo: MatDialogRef<DialogoConfirmacionComponent>,\n    @Inject(MAT_DIALOG_DATA) public mensaje: string) { }\n\n    cerrarDialogo(): void {\n      this.dialogo.close(false);\n    }\n    confirmado(): void {\n      this.dialogo.close(true);\n    }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 mat-dialog-title>Confirmación</h1>\n<div mat-dialog-content>\n    <p>{{mensaje}}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"cerrarDialogo()\">No</button>\n    <button mat-button (click)=\"confirmado()\" cdkFocusInitial>Sí</button>\n</div>","import { Injectable } from '@angular/core';\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\n@Injectable()\r\nexport class CustomMatPaginatorIntl extends MatPaginatorIntl {\r\n    itemsPerPageLabel = 'Elementos por página '; \r\n    nextPageLabel     = 'siguiente';\r\n    previousPageLabel = 'anterior';\r\n  \r\n    getRangeLabel = function (page, pageSize, length) {\r\n      if (length === 0 || pageSize === 0) {\r\n        return '0 od ' + length;\r\n      }\r\n      length = Math.max(length, 0);\r\n      const startIndex = page * pageSize;\r\n      const endIndex = startIndex < length ?\r\n        Math.min(startIndex + pageSize, length) :\r\n        startIndex + pageSize;\r\n      return startIndex + 1 + ' - ' + endIndex + ' de ' + length;\r\n    };\r\n  }","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AutenticacionService } from '../servicios/autenticacion.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private autService: AutenticacionService,\n    private router: Router,\n    private activatedRouter: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n\n  isAuth() {\n    return this.autService.isAuthenticated();\n  }\n\n  onLogout() {\n    this.autService.logout();\n    this.router.navigate(['/inicio'])\n\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Compras App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse right\" id=\"navbarNav\">\n        <ul class=\"navbar-nav mr-auto right\">\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" routerLink=\"/\">Inicio </a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" *ngIf=\"isAuth()\">\n                <a class=\"nav-link\" routerLink=\"/proveedores\">Proveedores </a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" routerLink=\"/presupuestos\" *ngIf=\"isAuth()\">Presupuestos </a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" routerLink=\"/registro\"*ngIf=\"!isAuth()\">Registrarme </a>\n            </li>\n            <li class=\"nav-item\"> \n                <button class=\"btn btn-primary float-md-right\" \n                     routerLink=\"/iniciosesion\" *ngIf=\"!isAuth()\">Inicie sesión</button> \n              </li>\n              <li class=\"nav-item\" *ngIf=\"isAuth()\">\n                <button class=\"btn btn-primary float-md-right\"  \n                     (click)=\"onLogout()\">Cerrar sesión</button>\n        </ul>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AutenticacionService } from 'src/app/servicios/autenticacion.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit {\n\n  registroForm: FormGroup;\n  userdata: any;\n\n  erroresForm = { \n    'email': '', \n    'password': '' \n   }\n\n   mensajesValidacion = { \n    'email': { \n      'required':      'Email obligatorio', \n      'email':         'Introduzca una dirección email correcta' \n    }, \n    'password': { \n      'required':      'Contraseña obligatoria', \n      'pattern':       'La contraseña debe tener al menos una letra un número ', \n      'minlength':     'y más de 6 caracteres' \n    } \n  } \n\n  constructor(private formBuilder: FormBuilder, \n    private autService: AutenticacionService, \n    private router: Router, \n    private activatedRouter: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.registroForm = this.formBuilder.group({\n      'email': ['', [ Validators.required, Validators.email]],\n      'password': ['', [Validators.required, Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'), Validators.minLength(6)]]\n    });\n    this.registroForm.valueChanges.subscribe(data =>this.onValueChanged(data)); \n    this.onValueChanged(); \n\n  }\n\n  saveUserdata() {\n    const saveUserdata = {\n      email: this.registroForm.get('email').value,\n      password: this.registroForm.get('password').value,\n    };\n    return saveUserdata;\n  }\n\n  onSubmit() {\n    this.userdata = this.saveUserdata(); \n    this.autService.registroUsuario(this.userdata).then((user)=>{\n      if(user){\n    this.router.navigate(['/inicio']);\n      }\n    })\n    .catch(error => {\n      alert(error);\n    }\n    );\n  }\n\n  onValueChanged(data?: any) { \n    if (!this.registroForm) { return; } \n    const form = this.registroForm; \n    for (const field in this.erroresForm) { \n       \n      this.erroresForm[field] = ''; \n      const control = form.get(field); \n      if (control && control.dirty && !control.valid) { \n        const messages = this.mensajesValidacion[field]; \n        for (const key in control.errors) { \n          this.erroresForm[field] += messages[key] + ' '; \n         } \n       } \n     } \n   } \n\n}\n","<div class=\"row\"> \n    <div class=\"col-md-6 offset-md-3\"> \n      <form [formGroup]=\"registroForm\" (ngSubmit)=\"onSubmit()\"> \n        <h4>Introduzca sus datos de registro</h4> \n        <label>Correo Electrónico</label> \n        <input type=\"email\" id=\"inputEmail\" class=\"form-control\"  \n             formControlName=\"email\" required autofocus> \n        <p class=\"alert alert-danger\" *ngIf=\"erroresForm.email\"> \n          {{ erroresForm.email }} \n        </p> \n        <label>Contraseña</label> \n        <input type=\"password\" id=\"inputPassword\" class=\"form-control\"  \n             formControlName=\"password\" required> \n        <p class=\"alert alert-danger\" *ngIf=\"erroresForm.password\"> \n          {{ erroresForm.password }} \n        </p> \n        <hr> \n        <button type=\"submit\"  \n                class=\"btn btn-primary\" \n                [disabled]=\"!registroForm.valid\" \n                >Registrar</button>  \n      </form> \n    </div> \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { proveedor } from 'src/app/model/proveedor';\nimport { ProveedoresService } from 'src/app/servicios/proveedores.service';\n\n@Component({\n  selector: 'app-editpro',\n  templateUrl: './editpro.component.html',\n  styleUrls: ['./editpro.component.css']\n})\nexport class EditproComponent implements OnInit {\n\n  proveedorForm: FormGroup;\n  proveedor: proveedor = {\n  \n    nombre: '',\n    cif: '',\n    direccion: '',\n    cp: null,\n    localidad: '',\n    provincia: '',\n    telefono: null,\n    email: '',\n    contacto: ''\n  };\n  id: string;\n\n\n  provincias: string[] = [\n    'Álava', 'Albacete', 'Alicante', 'Almería', 'Asturias', 'Ávila', 'Badajoz', 'Barcelona',\n    'Burgos', 'Cáceres', 'Cádiz', 'Cantabria', 'Castellón', 'Ciudad Real', 'Córdoba',\n    'La Coruña', 'Cuenca', 'Gerona', 'Granada', 'Guadalajara',\n    'Guipúzcoa', 'Huelva', 'Huesca', 'IslasBaleares', 'Jaén', 'León', 'Lérida', 'Lugo',\n    'Madrid', 'Málaga', 'Murcia', 'Navarra', 'Orense', 'Palencia', 'Las Palmas',\n    'Pontevedra', 'La Rioja', 'Salamanca', 'Segovia', 'Sevilla', 'Soria', 'Tarragona',\n    'Santa Cruz de Tenerife', 'Teruel', 'Toledo', 'Valencia', 'Valladolid', 'Vizcaya',\n    'Zamora', 'Zaragoza']\n\n  constructor(private pf: FormBuilder,\n    private proveedorService: ProveedoresService,\n    private router: Router,\n    private activatedRouter: ActivatedRoute) {\n\n    this.activatedRouter.params.subscribe(parametros => {\n      this.id = parametros['id'];\n      this.proveedorService.getProveedor(this.id).subscribe((data) => {\n        this.proveedor = {\n          key: data.key,\n          ...data.payload.val() as proveedor\n        };\n      });\n    });\n  }\n\n\n  ngOnInit(): void {\n\n    this.proveedorForm = this.pf.group({\n\n      nombre: ['', Validators.required],\n      cif: ['', Validators.required],\n      direccion: ['', Validators.required],\n      cp: ['', Validators.required],\n      localidad: ['', Validators.required],\n      provincia: ['', Validators.required],\n      telefono: ['', Validators.required],\n      email: ['', [Validators.required, , Validators.email]],\n      contacto: ['', Validators.required]\n    });\n  }\n\n\n  saveProveedor() {\n    const proveedor = {\n      nombre: this.proveedorForm.get('nombre').value,\n      cif: this.proveedorForm.get('cif').value,\n      direccion: this.proveedorForm.get('direccion').value,\n      cp: this.proveedorForm.get('cp').value,\n      localidad: this.proveedorForm.get('localidad').value,\n      provincia: this.proveedorForm.get('provincia').value,\n      telefono: this.proveedorForm.get('telefono').value,\n      email: this.proveedorForm.get('email').value,\n      contacto: this.proveedorForm.get('contacto').value\n    };\n    return proveedor;\n  }\n\n  onSubmit() {    \n    this.proveedor = this.saveProveedor(); \n    this.proveedorService.putProveedor( this.id, this.proveedor).then(()=>{\n      this.router.navigate(['/proveedores']);\n    });\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset 2\">\n        <h2>Editar proveedor</h2> <a class=\"btn btn-primary float-md-right\" routerLink=\"/proveedores\">Regresar al\n            listado</a>\n        <br>\n        <form [formGroup]=\"proveedorForm\">\n            <div class=\"form-group\">\n                <label for=\"nombre\">Nombre&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.nombre.valid &&\n                proveedorForm.controls.nombre.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.nombre.invalid &&\n                proveedorForm.controls.nombre.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"nombre\" formControlName=\"nombre\"\n                    [(ngModel)]=\"proveedor.nombre\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.nombre.invalid && proveedorForm.controls.nombre.touched\">\n                    El campo nombre es obligatorio.\n                </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"cif\">C.I.F.&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.cif.valid &&\n                proveedorForm.controls.cif.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.cif.invalid &&\n                proveedorForm.controls.cif.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"cif\" formControlName=\"cif\" [(ngModel)]=\"proveedor.cif\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.cif.invalid && proveedorForm.controls.cif.touched\">\n                    El campo C.I.F es obligatorio.\n                </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"direccion\">Dirección&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.direccion.valid &&\n                proveedorForm.controls.direccion.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.direccion.invalid &&\n                proveedorForm.controls.direccion.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"direccion\" formControlName=\"direccion\"\n                    [(ngModel)]=\"proveedor.direccion\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.direccion.invalid && proveedorForm.controls.direccion.touched\">\n                    El campo Dirección es obligatorio.\n                </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"cp\">Código Postal&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.cp.valid &&\n                proveedorForm.controls.cp.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.cp.invalid &&\n                proveedorForm.controls.cp.touched\"> </i>\n                <input type=\"number\" class=\"form-control\" id=\"cp\" formControlName=\"cp\" [(ngModel)]=\"proveedor.cp\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.cp.invalid && proveedorForm.controls.cp.touched\">\n                    El campo Código Postal es obligatorio.\n                </p>\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.cp.invalid && proveedorForm.controls.cp.touched\">\n                    El campo Código Postal ha de ser correcto.\n                </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"localidad\">Localidad&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.localidad.valid &&\n                proveedorForm.controls.localidad.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.localidad.invalid &&\n                proveedorForm.controls.localidad.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"localidad\" formControlName=\"localidad\"\n                    [(ngModel)]=\"proveedor.localidad\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.localidad.invalid && proveedorForm.controls.localidad.touched\">\n                    El campo Localidad es obligatorio.\n                </p>\n            </div>\n            <div class=\"form-group\"><label for=\"provincia\">Provincia&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.provincia.valid &&\n                proveedorForm.controls.provincia.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.provincia.invalid &&\n                proveedorForm.controls.provincia.touched\"> </i>\n                <select class=\"form-control\" id=\"provincia\" formControlName=\"provincia\"\n                    [(ngModel)]=\"proveedor.provincia\">\n                    <option value=\"\">Seleccione la provincia&nbsp;</option>\n                    <option *ngFor=\"let provincia of provincias\" [value]=\"provincia\">{{provincia}} </option>\n                </select>\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.provincia.invalid && proveedorForm.controls.provincia.touched\">\n                    El campo Provincia es obligatorio.\n                </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"telefono\">Teléfono&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.telefono.valid &&\n                proveedorForm.controls.telefono.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.telefono.invalid &&\n                proveedorForm.controls.telefono.touched\"> </i>\n                <input type=\"number\" class=\"form-control\" id=\"telefono\" formControlName=\"telefono\"\n                    [(ngModel)]=\"proveedor.telefono\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.telefono.invalid && proveedorForm.controls.telefono.touched\">\n                    El campo Teléfono es obligatorio.\n                </p>\n            </div>\n            <div class=\"form-group\"><label for=\"email\">Correo Electrónico&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.email.valid &&\n                proveedorForm.controls.email.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.email.invalid &&\n                proveedorForm.controls.email.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\"\n                    [(ngModel)]=\"proveedor.email\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.email.invalid && proveedorForm.controls.email.touched\">\n                    Por favor introduzca una dirección de correo correcta.\n                </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"contacto\">Persona de contacto&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.contacto.valid &&\n                proveedorForm.controls.contacto.touched\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.contacto.invalid &&\n                proveedorForm.controls.contacto.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"contacto\" formControlName=\"contacto\"\n                    [(ngModel)]=\"proveedor.contacto\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.contacto.invalid && proveedorForm.controls.contacto.touched\">\n                    El campo Persona de contacto es obligatorio.\n                </p>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"proveedorForm.valid\" (click)=\"this.onSubmit()\">Guardar\n                cambios</button>\n            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!proveedorForm.valid\" disabled>Guardar cambios</button>\n            <a class=\"btn btn-danger cancelar\" routerLink=\"/proveedores\">Cancelar</a>\n            <p class=\"alert alert-danger \" *ngIf=\"!proveedorForm.valid\">\n                Por favor complete todos los campos\n            </p>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { proveedor } from 'src/app/model/proveedor';\nimport { ProveedoresService } from 'src/app/servicios/proveedores.service';\nimport { Router} from '@angular/router';\n\n@Component({\n  selector: 'app-addprovee',\n  templateUrl: './addprovee.component.html',\n  styleUrls: ['./addprovee.component.css']\n})\nexport class AddproveeComponent implements OnInit {\n\n  proveedorForm: FormGroup;\n  proveedor: proveedor;\n\n\n  provincias: string[] = [\n    'Álava', 'Albacete', 'Alicante', 'Almería', 'Asturias', 'Ávila', 'Badajoz', 'Barcelona',\n    'Burgos', 'Cáceres', 'Cádiz', 'Cantabria', 'Castellón', 'Ciudad Real', 'Córdoba',\n    'La Coruña', 'Cuenca', 'Gerona', 'Granada', 'Guadalajara',\n    'Guipúzcoa', 'Huelva', 'Huesca', 'IslasBaleares', 'Jaén', 'León', 'Lérida', 'Lugo',\n    'Madrid', 'Málaga', 'Murcia', 'Navarra', 'Orense', 'Palencia', 'Las Palmas',\n    'Pontevedra', 'La Rioja', 'Salamanca', 'Segovia', 'Sevilla', 'Soria', 'Tarragona',\n    'Santa Cruz de Tenerife', 'Teruel', 'Toledo', 'Valencia', 'Valladolid', 'Vizcaya',\n    'Zamora', 'Zaragoza']\n\n\n\n\n\n  constructor(private pf: FormBuilder, private proveedoresService: ProveedoresService, private router: Router) {\n    \n  }\n\n  ngOnInit(): void {\n    this.proveedorForm = this.pf.group({\n      \n    nombre: ['', Validators.required],\n    cif: ['', Validators.required],\n    direccion: ['', Validators.required],\n    cp: ['', Validators.required],\n    localidad: ['', Validators.required],\n    provincia: ['', Validators.required],\n    telefono: ['', Validators.required],\n    email: ['', [Validators.required, , Validators.email]],\n    contacto: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.proveedor = this.saveProveedor();\n    this.proveedoresService.postProveedor(this.proveedor);\n    this.router.navigate(['/proveedores']);\n  }\n\n  saveProveedor(){\n    const proveedor = {\n    nombre: this.proveedorForm.get('nombre').value,\n    cif: this.proveedorForm.get('cif').value,\n    direccion: this.proveedorForm.get('direccion').value,\n    cp: this.proveedorForm.get('cp').value,\n    localidad: this.proveedorForm.get('localidad').value,\n    provincia: this.proveedorForm.get('provincia').value,\n    telefono: this.proveedorForm.get('telefono').value,\n    email: this.proveedorForm.get('email').value,\n    contacto: this.proveedorForm.get('contacto').value\n    };\n    return proveedor;\n  }\n  \n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset 2\">\n        <h2>Añadir nuevo proveedor</h2> <a class=\"btn btn-primary float-md-right\" routerLink=\"/proveedores\">Regresar al\n            listado</a>\n        <br>\n        <form [formGroup]=\"proveedorForm\" (ngOnSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"nombre\">Nombre&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.nombre.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.nombre.invalid &&\n                proveedorForm.controls.nombre.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"nombre\" formControlName=\"nombre\"><p class=\"alert alert-danger\"\n                *ngIf=\"proveedorForm.controls.nombre.invalid && proveedorForm.controls.nombre.touched\">\n                El campo nombre es obligatorio.\n            </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"cif\">C.I.F.&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.cif.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.cif.invalid &&\n                proveedorForm.controls.cif.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"cif\" formControlName=\"cif\"><p class=\"alert alert-danger\"\n                *ngIf=\"proveedorForm.controls.cif.invalid && proveedorForm.controls.cif.touched\">\n                El campo C.I.F es obligatorio.\n            </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"direccion\">Dirección&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.direccion.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.direccion.invalid &&\n                proveedorForm.controls.direccion.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"direccion\" formControlName=\"direccion\"><p class=\"alert alert-danger\"\n                *ngIf=\"proveedorForm.controls.direccion.invalid && proveedorForm.controls.direccion.touched\">\n                El campo Dirección es obligatorio.\n            </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"cp\">Código Postal&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.cp.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.cp.invalid &&\n                proveedorForm.controls.cp.touched\"> </i>\n                <input type=\"number\" class=\"form-control\" id=\"cp\" formControlName=\"cp\"><p class=\"alert alert-danger\"\n                *ngIf=\"proveedorForm.controls.cp.invalid && proveedorForm.controls.cp.touched\">\n                El campo Código Postal es obligatorio.\n            </p><p class=\"alert alert-danger\"\n            *ngIf=\"proveedorForm.controls.cp.invalid && proveedorForm.controls.cp.touched\">\n            El campo Código Postal ha de ser correcto.\n        </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"localidad\">Localidad&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.localidad.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.localidad.invalid &&\n                proveedorForm.controls.localidad.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"localidad\" formControlName=\"localidad\"><p class=\"alert alert-danger\"\n                *ngIf=\"proveedorForm.controls.localidad.invalid && proveedorForm.controls.localidad.touched\">\n                El campo Localidad es obligatorio.\n            </p>\n            </div>\n            <div class=\"form-group\"><label for=\"provincia\">Provincia&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.provincia.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.provincia.invalid &&\n                proveedorForm.controls.provincia.touched\"> </i>\n                <select class=\"form-control\" id=\"provincia\" formControlName=\"provincia\">\n                    <option value=\"\">Seleccione la provincia&nbsp;</option>\n                    <option *ngFor=\"let provincia of provincias\" [value]=\"provincia\">{{provincia}} </option>\n                </select><p class=\"alert alert-danger\"\n                *ngIf=\"proveedorForm.controls.provincia.invalid && proveedorForm.controls.provincia.touched\">\n                El campo Provincia es obligatorio.\n            </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"telefono\">Teléfono&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.telefono.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.telefono.invalid &&\n                proveedorForm.controls.telefono.touched\"> </i>\n                <input type=\"number\" class=\"form-control\" id=\"telefono\" formControlName=\"telefono\"><p class=\"alert alert-danger\"\n                *ngIf=\"proveedorForm.controls.telefono.invalid && proveedorForm.controls.telefono.touched\">\n                El campo Teléfono es obligatorio.\n            </p>\n            </div>\n            <div class=\"form-group\"><label for=\"email\">Correo Electrónico&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.email.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.email.invalid &&\n                proveedorForm.controls.email.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n                <p class=\"alert alert-danger\"\n                    *ngIf=\"proveedorForm.controls.email.invalid && proveedorForm.controls.email.touched\">\n                    Por favor introduzca una dirección de correo correcta.\n                </p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"contacto\">Persona de contacto&nbsp;</label>\n                <i class=\"fa fa-check-circle check\" *ngIf=\"proveedorForm.controls.contacto.valid\"> </i>\n                <i class=\"fa fa-exclamation-circle uncheck\" *ngIf=\"proveedorForm.controls.contacto.invalid &&\n                proveedorForm.controls.contacto.touched\"> </i>\n                <input type=\"text\" class=\"form-control\" id=\"contacto\" formControlName=\"contacto\"><p class=\"alert alert-danger\"\n                *ngIf=\"proveedorForm.controls.contacto.invalid && proveedorForm.controls.contacto.touched\">\n                El campo Persona de contacto es obligatorio.\n            </p>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"proveedorForm.valid\" (click)=\"this.onSubmit()\">Añadir\n                proveedor</button>\n            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!proveedorForm.valid\" disabled>Añadir\n                proveedor</button>\n            <a class=\"btn btn-danger cancelar\" routerLink=\"/proveedores\">Cancelar</a>\n            <p class=\"alert alert-danger \" *ngIf=\"!proveedorForm.valid\">\n                Por favor complete todos los campos\n            </p>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport firebase from 'firebase/app'\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutenticacionService {\n\n  logged:boolean = false;\n\n  constructor(private authFire: AngularFireAuth, private router: Router, private activatedRouter: ActivatedRoute) {\n    this.verifyAuthenticate();\n  }\n\n  registroUsuario(userdata) {\n    return this.authFire.createUserWithEmailAndPassword(userdata.email, userdata.password)\n  }\n\n  inicioSesion(userdata) {\n    return this.authFire.signInWithEmailAndPassword(userdata.email, userdata.password)\n      \n  }\n\n  isAuthenticated() {\n    return this.logged;\n  }\n\n  verifyAuthenticate(){    \n    this.authFire.onAuthStateChanged((user)=>{\n      if(user){\n        this.logged = true;\n      }else{\n        this.logged = false;\n      }\n    })\n  }\n\n  logout() { \n    this.authFire.signOut(); \n} \n\ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n  if(this.logged){\n    return true;\n  }else{\n    this.router.navigateByUrl('/iniciosesion');\n    return false;\n  }\n}\n\n\n  GoogleAuth() {\n    return this.AuthLogin(new firebase.auth.GoogleAuthProvider());\n  }  \n\n  AuthLogin(provider): Promise<firebase.auth.UserCredential> {\n    return this.authFire.signInWithPopup(provider);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InicioComponent } from 'src/app/inicio/inicio.component';\nimport { ProveedoresComponent } from 'src/app/proveedores/proveedores/proveedores.component';\nimport { AddproveeComponent } from 'src/app/proveedores/addprovee/addprovee.component';\nimport { AddpresComponent } from 'src/app/presupuestos/addpres/addpres.component';\nimport { PresupuestosComponent } from 'src/app/presupuestos/presupuestos/presupuestos.component';\nimport { EditpresComponent } from 'src/app/presupuestos/editpres/editpres.component';\nimport { EditproComponent } from './proveedores/editpro/editpro.component';\nimport { RegistroComponent } from './autenticacion/registro/registro.component';\nimport { InisesComponent } from './autenticacion/inises/inises.component';\nimport { AutenticacionService } from './servicios/autenticacion.service';\n\nconst routes: Routes = [\n  {path: '', component: InicioComponent},\n  {path: 'proveedores', component: ProveedoresComponent, canActivate:[AutenticacionService]},\n  {path: 'addprovee', component: AddproveeComponent, canActivate:[AutenticacionService]},\n  { path: 'addpres', component: AddpresComponent, canActivate:[AutenticacionService]},\n  {path: 'presupuestos', component: PresupuestosComponent, canActivate:[AutenticacionService]},\n  {path: 'editpres/:id', component: EditpresComponent, canActivate:[AutenticacionService]},\n  {path: 'editpro/:id', component: EditproComponent, canActivate:[AutenticacionService]},\n  {path: 'registro', component: RegistroComponent}, \n  { path: 'iniciosesion', component: InisesComponent },\n  { path: '**', component: InicioComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}